{"version":3,"file":"static/js/219.87895100.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAW,mCAAG,oGACAF,IAAAA,IAAA,mCAAsCC,IADtC,cACjBE,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,qDAOXC,EAAS,mCAAG,WAAOC,GAAP,uFACEN,IAAAA,IAAA,+BAAkCC,EAAlC,iCAA8DK,EAA9D,gCADF,cACfH,EADe,yBAEdA,EAASC,MAFK,2CAAH,sDAOTG,EAAe,mCAAI,WAAOC,GAAP,uFACLR,IAAAA,IAAA,gBAAmBQ,EAAnB,oBAAiCP,EAAjC,oBADK,cACtBE,EADsB,yBAErBA,EAASC,MAFY,2CAAJ,sDAMfK,EAAY,mCAAI,WAAOD,GAAP,uFACFR,IAAAA,IAAA,gBAAmBQ,EAAnB,4BAAyCP,EAAzC,oBADE,cACnBE,EADmB,yBAElBA,EAASC,MAFS,2CAAJ,sDAKZM,EAAe,mCAAI,WAAOF,GAAP,uFACLR,IAAAA,IAAA,gBAAmBQ,EAAnB,4BAAyCP,EAAzC,oBADK,cACtBE,EADsB,yBAErBA,EAASC,MAFY,2CAAJ,qD,8EClBfO,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,+IClBWC,EAAKT,EAAAA,GAAAA,GAAH,0KAGR,SAAAU,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAEE,SAAAQ,GAAC,OAAIA,EAAEC,MAAMC,QAAQC,MAApB,IAA8B,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,KAAnB,IAG7B,SAAAL,GAAC,OAAIA,EAAEC,MAAMG,OAAOE,OAAnB,IACM,SAAAN,GAAC,OAAIA,EAAEC,MAAMG,OAAOE,OAAnB,IAIRC,EAAMjB,EAAAA,GAAAA,IAAH,6E,SCiBhB,EA1Ba,WACT,IAAQkB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACN1B,EAAAA,EAAAA,IAAaqB,GAASM,MAAK,SAAAhC,GAAI,OAAI8B,EAAY9B,EAAKiC,KAArB,GAClC,GAAE,CAACP,KAGA,SAACnB,EAAA,EAAD,CAAK2B,GAAG,KAAKC,GAAI,EAAGC,QAAQ,OAAOC,QAAS,EAAGC,cAAc,SAA7D,SACKT,EAASU,KAAI,gBAAGnC,EAAH,EAAGA,GAAIoC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACV,UAACzB,EAAD,YACI,SAACQ,EAAD,CAAKkB,IAAKD,EAAY,0CACmBA,GACnC,iGACFE,IAAKJ,EAAMK,MAAM,SACrB,UAACtC,EAAA,EAAD,YACI,wBAAKiC,KACL,wBAAKC,SAPJrC,EADC,KAczB,C","sources":["API/API.js","components/Box.js","components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\nconst key = \"8018dbd4b46ba3aebb8670f173bfaf20\"\n\nexport const getTrending = async () => {\n    const response = await axios.get(`trending/all/day?api_key=${key}`);\n    return response.data\n}\n\n\n\nexport const getMovies = async (query) => {\n    const response = await axios.get(`search/movie?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return response.data\n}\n\n\n\nexport const getMovieDetails  = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${key}&language=en-US`);\n    return response.data\n}\n\n\nexport const getMovieCast  = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${key}&language=en-US`);\n    return response.data\n}\n\nexport const getMovieReviews  = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${key}&language=en-US`);\n    return response.data\n}","import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n);","import styled from \"styled-components\"\n\nexport const Li = styled.li`\ndisplay: flex;\nalign-items: center;\ngap: ${p => p.theme.space[4]}px;\nlist-style: inherit;\nborder: ${p => p.theme.borders.dashed} ${p => p.theme.colors.black};\n\n:hover{\n    color: ${p => p.theme.colors.primary};\n    border-color: ${p => p.theme.colors.primary};\n}\n`\n\nexport const Img = styled.img`\nobject-fit: contain;\nwidth: 150px;\nheight: 200px;\n`","import { getMovieCast } from \"API/API\";\nimport { Box } from \"components/Box\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Img, Li } from \"../Cast/Cast.styled\";\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [castList, setCastList] = useState([])\n\n    useEffect(() => {\n        getMovieCast(movieId).then(data => setCastList(data.cast))\n    }, [movieId])\n\n    return (\n        <Box as=\"ul\" py={4} display=\"flex\" gridGap={4} flexDirection=\"column\" >\n            {castList.map(({ id, name, character, profile_path }) => (\n                <Li key={id}>\n                    <Img src={profile_path\n                        ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                        : 'https://as2.ftcdn.net/v2/jpg/01/80/29/33/1000_F_180293326_tKL2OSHmi40WhYM9L7zgSjsjtWzUoJZY.jpg'}\n                        alt={name} width=\"200\" />\n                    <Box>\n                        <h3>{name}</h3>\n                        <h3>{character}</h3>\n                    </Box>\n                </Li>)\n            )}\n        </Box>\n    )\n}\n\nexport default Cast"],"names":["axios","key","getTrending","response","data","getMovies","query","getMovieDetails","id","getMovieCast","getMovieReviews","Box","styled","color","space","layout","flexbox","grid","background","border","position","Li","p","theme","borders","dashed","colors","black","primary","Img","movieId","useParams","useState","castList","setCastList","useEffect","then","cast","as","py","display","gridGap","flexDirection","map","name","character","profile_path","src","alt","width"],"sourceRoot":""}